package application.bookstore.models;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;
import java.io.IOException;


public class UserMock {

    public static User createMockUserWithExistingUsername() {
        User userMock = mock(User.class);
        when(userMock.usernameExists()).thenReturn(true);
        return userMock;
    }

    public static User createMockUserWithNonExistingUsernameAndSuccessfulSave() {
        User userMock = mock(User.class);
        when(userMock.usernameExists()).thenReturn(false);
        when(userMock.saveInFile()).thenReturn("File Saved Successfully");
        return userMock;
    }

    public static User createMockUserWithNonExistingUsernameAndSaveFailure() throws IOException {
        User userMock = mock(User.class);
        when(userMock.usernameExists()).thenReturn(false);
        when(userMock.saveInFile()).thenThrow(new IOException("File saving error"));
        return userMock;

    }
}
